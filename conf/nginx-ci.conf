
# nginx.conf
# nginx.staging.conf
#
# These two files are basically the same and only differ for the 
# domains they serve and the SSL certificates which are domain specific.
# They should be kept in sync with one another.
# TODO figure out how to move duplicated parts to an included file

user www;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 768;
	# multi_accept on;
}

http {

	# Basic Settings
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	# SSL Settings
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

	# create log file that can be used by netdata for monitoring
    log_format netdata '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '$request_length $request_time $upstream_response_time '
                       '"$http_referer" "$http_user_agent"';
    access_log /var/log/nginx/access.log netdata;


	# Gzip Settings
	gzip on;

    upstream app_server {
        # fail_timeout=0 means we always retry an upstream even if 
        # it failed to return a good HTTP response
        
        # for UNIX domain socket setups
        server unix:/tmp/gunicorn.sock fail_timeout=0;

        # for a TCP configuration
        # server 192.168.0.7:8000 fail_timeout=0;
    }

    server {
        listen 80;
        server_name ~^(\w+)\.analitico\.ai$;
        # redirect to https
        return 301 https://$1.analitico.ai$request_uri;
    }

    server {
        # set the correct host(s) for your site (analitico.ai and any subdomain)
        server_name .analitico.ai;

        # serve https clients with domain specific certificates
        listen 443 ssl;

        ssl_certificate /home/www/ssl/analitico.ai.crt;
        ssl_certificate_key /home/www/ssl/analitico.ai.key;
        # you need to copy on the server the certificate for the specific server, eg:
        # for analitico.ai copy /analitico-ops/certificates/analitico.ai/analitico.ai.*
        # for staging.analitico.ai copy /analitico-ops/certificates/staging.analitico.ai/staging.analitico.ai.*

        keepalive_timeout 5;
        client_max_body_size 4G;

        # path for static files
        root /home/www/analitico/source/static;

        location /static {
            alias /home/www/analitico/source/static;
        }

        location / {
            # checks for static file, if not found proxy to app
            try_files $uri @proxy_to_app;
        }

        location @proxy_to_app {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            # we don't want nginx trying to do something clever with
            # redirects, we set the Host: header above already.
            proxy_redirect off;
            proxy_pass http://app_server;
        }

        # used by netdata for status checks
        location /stub_status {
            stub_status;
            # Security: Only allow access from the IP below.
            allow 127.0.0.1;
            # Deny anyone else
            deny all;
        }

        error_page 500 502 503 504 /500.html;
            location = /500.html {
            root /home/www/analitico/source/static;
        }
    }
}
