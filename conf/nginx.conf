# nginx configuration for analitico platform
user www;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

error_log /var/log/nginx_error.log info;

events {
	worker_connections 768;
	# multi_accept on;
}

http {

	# Basic Settings
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	# SSL Settings
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

	# create log file that can be used by netdata for monitoring
    log_format netdata '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '$request_length $request_time $upstream_response_time '
                       '"$http_referer" "$http_user_agent"';
    access_log /var/log/nginx_access.log netdata;


	# Gzip Settings
	gzip on;
    # tells proxies to cache both gzipped and regular versions of a resource
    gzip_vary on;
    # disable compression for Internet Explorer versions 1-6
    gzip_disable "MSIE [1-6]\.";
    # compress data even for clients that are connecting via proxies
    gzip_proxied expired no-cache no-store private auth;
    # enables the types of files that can be compressed
    gzip_types application/javascript text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss; 

    upstream app_server {
        # fail_timeout=0 means we always retry an upstream even if 
        # it failed to return a good HTTP response
        
        # for UNIX domain socket setups
        server unix:/tmp/gunicorn.sock fail_timeout=0;
        # used for testing on local env (backup is used only is other servers are not available)
        server 127.0.0.1:8000 backup;
        # for a TCP configuration
        # server 192.168.0.7:8000 fail_timeout=0;
    }

    # https for all domains
    server {
        # serve https clients with domain specific certificates
        listen 443 ssl;

        # long timeouts for uploading and downloading large batches
        proxy_connect_timeout 15m;
        # http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_send_timeout
        proxy_send_timeout 15m;        
        # http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_read_timeout
        proxy_read_timeout 15m;
        # timeout for two successive sends to client, not whole response
        send_timeout 90;
        # how long client connection will stay open on the server side
        keepalive_timeout 90;
        
        # Uploads can be huge
        client_max_body_size 16g;

        # you need to copy on the server the wildcard ssl certificate, eg:
        # copy /analitico-ops/certificates/analitico.ai/analitico.ai.*
        ssl_certificate /home/www/analitico-ci/ssl/analitico.ai.crt;
        ssl_certificate_key /home/www/analitico-ci/ssl/analitico.ai.key;

        # path for static files
        root /home/www/analitico/source/static;

        location /app {
            # serving static angular app
            alias /home/www/analitico/app/applications/analitico/;
            # disable browser caching for index.html
            location =/app/index.html {
                add_header 'Cache-Control' 'no-cache, no-store, must-revalidate' always;
                add_header 'Pragma' 'no-cache' always;
                add_header 'Expires' '0' always;
            }
            # always revalidate app.js
            location =/app/dist/app.js {
                add_header 'Cache-Control' 'no-cache, must-revalidate' always;
                add_header 'Pragma' 'no-cache' always;
            }
            try_files $uri$args $uri$args/ /app/index.html;
        }

        location /docs/s24 {
            # Supermercato24 has a private documentation site
            # where access is controlled by a basic auth passwords file
            # saved in /conf/.htpasswd. To add or change credentials use:
            # sudo htpasswd -c .htpasswd user1
            auth_basic "Supermercato24 APIs";
            auth_basic_user_file /home/www/analitico-ci/.htpasswd; 
            alias /home/www/analitico/documentation/site/s24/;
            try_files $uri$args $uri$args/ /index.html;
        }

        location /docs {
            # serving static documentation site
            alias /home/www/analitico/documentation/site/;
            try_files $uri$args $uri$args/ /index.html;
        }

        location /static {
            alias /home/www/analitico/source/static;
        }

        location / {
            # checks for static file, if not found proxy to app
            try_files $uri @proxy_to_app;
        }

        location @proxy_to_app {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            # we don't want nginx trying to do something clever with
            # redirects, we set the Host: header above already.
            proxy_redirect off;
            proxy_pass http://app_server;
        }

        # used by netdata for status checks
        location /stub_status {
            stub_status;
            # Security: Only allow access from the IP below.
            allow 127.0.0.1;
            # Deny anyone else
            deny all;
        }

        #error_page 500 502 503 504 /500.html;
        #    location = /500.html {
        #    root /home/www/analitico/source/static;
        #}
    }


    # knative is served using $PORT
    # website-start.sh script will replace the comment with the nginx  listen directive
    server {
        # as we run on custom port, do not redirect with port when absolute url is requested
        port_in_redirect off;
        #KNATIVE_LISTEN_PORT

        # long timeouts for uploading and downloading large batches
        proxy_connect_timeout 15m;
        # http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_send_timeout
        proxy_send_timeout 15m;        
        # http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_read_timeout
        proxy_read_timeout 15m;
        # timeout for two successive sends to client, not whole response
        send_timeout 90;
        # how long client connection will stay open on the server side
        keepalive_timeout 90;
        
        # Uploads can be huge
        client_max_body_size 16g;


        # path for static files
        root /home/www/analitico/source/static;

        location /app {
            # serving static angular app
            alias /home/www/analitico/app/applications/analitico/;
            # disable browser caching for index.html
            location =/app/index.html {
                add_header 'Cache-Control' 'no-cache, no-store, must-revalidate' always;
                add_header 'Pragma' 'no-cache' always;
                add_header 'Expires' '0' always;
            }
            # always revalidate app.js
            location =/app/dist/app.js {
                add_header 'Cache-Control' 'no-cache, must-revalidate' always;
                add_header 'Pragma' 'no-cache' always;
            }
            try_files $uri$args /app/index.html;
        }

        location /docs/s24 {
            # Supermercato24 has a private documentation site
            # where access is controlled by a basic auth passwords file
            # saved in /conf/.htpasswd. To add or change credentials use:
            # sudo htpasswd -c .htpasswd user1
            auth_basic "Supermercato24 APIs";
            auth_basic_user_file /home/www/analitico-ci/.htpasswd; 
            alias /home/www/analitico/documentation/site/s24/;
            try_files $uri$args /index.html;
        }

        location /docs {
            # serving static documentation site
            alias /home/www/analitico/documentation/site/;
            try_files $uri$args $uri$args/ /index.html;
        }

        location /static {
            alias /home/www/analitico/source/static;
        }

        location / {
            # checks for static file, if not found proxy to app
            try_files $uri @proxy_to_app;
        }

        location @proxy_to_app {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            # we don't want nginx trying to do something clever with
            # redirects, we set the Host: header above already.
            proxy_redirect off;
            proxy_pass http://app_server;
        }

        # used by netdata for status checks
        location /stub_status {
            stub_status;
            # Security: Only allow access from the IP below.
            allow 127.0.0.1;
            # Deny anyone else
            deny all;
        }
    }
}
