# Generated by Django 2.1.3 on 2018-12-15 23:14

import api.models.call
import api.models.token
import api.models.training
import api.models.usermanager
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import jsonfield.fields


class Migration(migrations.Migration):

    replaces = [('api', '0001_initial'), ('api', '0002_auto_20181201_1451'), ('api', '0003_auto_20181201_1518'), ('api', '0004_auto_20181202_1051'), ('api', '0005_training_settings'), ('api', '0006_auto_20181206_1056'), ('api', '0007_training_status'), ('api', '0008_auto_20181213_2149'), ('api', '0009_auto_20181215_1756')]

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', api.models.usermanager.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.SlugField(default=api.models.token.generate_token_id, max_length=32, primary_key=True, serialize=False, verbose_name='Id')),
                ('name', models.SlugField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
        migrations.CreateModel(
            name='Call',
            fields=[
                ('id', models.SlugField(default=api.models.call.generate_api_id, primary_key=True, serialize=False)),
                ('url', models.URLField(blank=True)),
                ('method', models.CharField(blank=True, choices=[('GET', 'GET'), ('POST', 'POST'), ('PUT', 'PUT'), ('PATCH', 'PATCH'), ('OPTIONS', 'OPTIONS'), ('HEAD', 'HEAD')], max_length=16)),
                ('data', jsonfield.fields.JSONField(blank=True, null=True, verbose_name='Request received')),
                ('results', jsonfield.fields.JSONField(blank=True, null=True, verbose_name='Response sent')),
                ('status', models.IntegerField(default=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'call',
                'db_table': 'api_call',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.SlugField(max_length=64, primary_key=True, serialize=False)),
                ('settings', jsonfield.fields.JSONField(blank=True, null=True)),
                ('training_id', models.SlugField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='auth.Group', verbose_name='Group that has access to this project')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Owner of this project')),
            ],
        ),
        migrations.CreateModel(
            name='Training',
            fields=[
                ('id', models.SlugField(default=api.models.training.generate_training_id, primary_key=True, serialize=False)),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('project', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='api.Project', verbose_name='Project')),
                ('results', jsonfield.fields.JSONField(blank=True, null=True, verbose_name='Results')),
                ('settings', jsonfield.fields.JSONField(blank=True, null=True, verbose_name='Settings')),
                ('status', models.SlugField(blank=True, default='Created')),
            ],
        ),
        migrations.AlterField(
            model_name='token',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AddField(
            model_name='call',
            name='token',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.Token', verbose_name='Token'),
        ),
        migrations.AlterField(
            model_name='call',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Created'),
        ),
        migrations.AlterField(
            model_name='call',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Updated'),
        ),
        migrations.AlterUniqueTogether(
            name='token',
            unique_together=set(),
        ),
        migrations.AlterModelOptions(
            name='token',
            options={'ordering': ('created_at',)},
        ),
    ]
