
image: docker:latest

# GitLab Build and Deploy to a Server via SSH
# https://codeburst.io/gitlab-build-and-push-to-a-server-via-ssh-6d27ca1bf7b4

variables:
  GCP_PROJECT_ID: analitico-api
  GCP_ZONE: europe-west1
  CONTAINER_DEV_IMAGE: registry.gitlab.com/analitico/analitico:latest

services:
- docker:dind
 
stages:
  - build
  - deploy

cache:
  paths:
    - pip-cache

build_dev:
  stage: build
  script:
    # login to registry
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com 
    # export ANALITICO ENV
    - export -p | grep ANALITICO_ > analitico-env
    # build docker image
    - docker build --pull -t $CONTAINER_DEV_IMAGE .
    # push the image to gitlab registry
    - docker push $CONTAINER_DEV_IMAGE
  only:
    - master

deploy-staging:
  stage: deploy
  only:
    - master
  script:
    - kubectl apply -f kubernetes.yml

deploy-production:
  stage: deploy
  when: manual
  image: google/cloud-sdk:latest
  only:
    - master
  script:
    # Authenticate using the service account stored here: https://gitlab.com/groups/{YOUR_GITLAB_PROJECT}/-/settings/ci_cd
    - echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
    - gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json
    - gcloud config set project $GCP_PROJECT_ID
    # Deploy to Google Functions
    - cp requirements.txt -t source
    # gcloud functions deploy s24-order-sorting --entry-point handle_s24_order_sorting --source source --runtime python37 --trigger-http --region europe-west1
    # gcloud functions deploy v1 --entry-point handle_api --source source --runtime python37 --trigger-http --region europe-west1
