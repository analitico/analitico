
image: docker:latest

# GitLab Build and Deploy to a Server via SSH
# https://codeburst.io/gitlab-build-and-push-to-a-server-via-ssh-6d27ca1bf7b4

variables:
  GCP_PROJECT_ID: analitico-api
  GCP_ZONE: europe-west1
  CONTAINER_DEV_IMAGE: registry.gitlab.com/analitico/analitico:$CI_COMMIT_SHA

services:
- docker:dind
 
stages:
  #- test
  - build
  - deploy

cache:
  paths:
    - pip-cache

before_script:
    #- ln -s /home/www/analitico/conf/nginx.conf /etc/nginx/
    #- nginx

#test:
#  stage: test
#  script:
    # Create virtual environment
#    - python3 -m venv venv
#    - source venv/bin/activate
#    - pip3 install -r requirements.txt
    # Prepare Django, run tests
#    - cd source
#    - ./manage.py collectstatic --noinput
    # ./manage.py test

build_dev:
  stage: build
  script:
    # login to registry
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com 
    # run docker
    - docker run --name temp-analitico registry.gitlab.com/analitico/analitico /bin/bash
    - docker cp /builds/analitico/analitico temp-analitico:/home
    - docker exec temp-analitico cd /home/analitico
    - docker exec temp-analitico cd /home/analitico
    - docker exec temp-analitico python3 -m venv venv
    - docker exec temp-analitico source venv/bin/activate
    - docker exec temp-analitico pip3 install -r requirements.txt
    - docker commit temp-analitico analitico
    - docker tag analitico $CONTAINER_DEV_IMAGE
    #- docker build --pull -t $CONTAINER_DEV_IMAGE .
    # push the image
    - docker push $CONTAINER_DEV_IMAGE
  only:
    - master

deploy-staging:
  stage: deploy
  only:
    - master
  script:
    - cd source

deploy-production:
  stage: deploy
  when: manual
  image: google/cloud-sdk:latest
  only:
    - master
  script:
    # Authenticate using the service account stored here: https://gitlab.com/groups/{YOUR_GITLAB_PROJECT}/-/settings/ci_cd
    - echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
    - gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json
    - gcloud config set project $GCP_PROJECT_ID
    # Deploy to Google Functions
    - cp requirements.txt -t source
    # gcloud functions deploy s24-order-sorting --entry-point handle_s24_order_sorting --source source --runtime python37 --trigger-http --region europe-west1
    # gcloud functions deploy v1 --entry-point handle_api --source source --runtime python37 --trigger-http --region europe-west1
