##
# Staging Load Balancer Nginx
##

user www;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1024;
    multi_accept on;
}

##
# Kubernetes API
##

stream {
    server {
        listen 6443;
        proxy_pass k8nodesAPI;
    }

    upstream k8nodesAPI {
        # staging1.analitico.ai
        server 116.202.100.29:6443 fail_timeout=0;
        # staging2.analitico.ai
        server 116.202.100.27:6443 fail_timeout=0 backup;
        # staging3.analitico.ai
        server 116.202.100.28:6443 fail_timeout=0 backup;
   }
}

http {

    ##
    # Basic Settings
    ##

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    server_tokens off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # SSL Settings
    # see: https://medium.com/@mvuksano/how-to-properly-configure-your-nginx-for-tls-564651438fe0
    ##

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;
    ssl_certificate           /root/certs/analitico.ai.crt;
    ssl_certificate_key       /root/certs/analitico.ai.key;
    ssl_session_cache shared:SSL:40m;
    ssl_session_timeout 4h;
    ssl_session_tickets on;

    ##
    # Logging Settings
    ##

    log_format netdata '$remote_addr - $remote_user [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '$request_length $request_time $upstream_response_time '
                    '"$http_referer" "$http_user_agent" $request_body';

    access_log /var/log/nginx/access.log netdata;
    error_log /var/log/nginx/error.log info;

    ##
    # Gzip Settings
    ##

    gzip on;

    # tells proxies to cache both gzipped and regular versions of a resource
    gzip_vary on;
    # disable compression for Internet Explorer versions 1-6
    gzip_disable "MSIE [1-6]\.";
    # compress data even for clients that are connecting via proxies
    gzip_proxied expired no-cache no-store private auth;
    # enables the types of files that can be compressed
    gzip_types application/javascript text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss;

    ##
    # Proxy Settings
    ##

    proxy_http_version 1.1;
    proxy_connect_timeout 10s;
    proxy_next_upstream error timeout;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    # enable nginx to properly handle the WebSocket protocol 
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;

    upstream k8nodes {
        # staging1.analitico.ai
        server 116.202.100.29:31380 fail_timeout=0;
        # staging2.analitico.ai
        server 116.202.100.27:31380 fail_timeout=0 backup;
        # staging3.analitico.ai
        server 116.202.100.28:31380 fail_timeout=0 backup;
    }

    upstream k8nodesSSL {
        # staging1.analitico.ai
        server 116.202.100.29:31390 fail_timeout=0;
        # staging2.analitico.ai
        server 116.202.100.27:31390 fail_timeout=0 backup;      
        # staging3.analitico.ai
        server 116.202.100.28:31390 fail_timeout=0 backup;
    }

    upstream k8prometheusNodes {
        # staging1.analitico.ai
        server 116.202.100.29:32464 fail_timeout=0;
        # staging2.analitico.ai
        server 116.202.100.27:32464 fail_timeout=0 backup;      
        # staging3.analitico.ai
        server 116.202.100.28:32464 fail_timeout=0 backup;
    }

    upstream k8dashboardNodes { 
        # staging1.analitico.ai
        server 116.202.100.29:31113 fail_timeout=0;
        # staging2.analitico.ai
        server 116.202.100.27:31113 fail_timeout=0 backup;      
        # staging3.analitico.ai
        server 116.202.100.28:31113 fail_timeout=0 backup;
    }

    # values for the WebSocket headers
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # do not serve from other domains
    server {
        return 404;
    }

    server {
        server_name 127.0.0.1;

        # used by netdata for status checks
        location /stub_status {
            stub_status;
            # Security: Only allow access from the IP below.
            allow 127.0.0.1;
            # Deny anyone else
            deny all;
        }
    }

        
    ##
    # Kubernetes Dashboard
    # https://dashboard.cloud-staging.analitico.ai
    ##

    server {
        listen 443 ssl http2;
        server_name dashboard.cloud-staging.analitico.ai;

        location / {
            proxy_pass https://k8dashboardNodes;
        }
    }

    ##
    # Prometheus 
    # https://prometheus.cloud-staging.analitico.ai
    ##

    server {
        listen 443 ssl http2;
        server_name prometheus.cloud-staging.analitico.ai;

        location / {
            # works on port 80 only
            proxy_pass http://k8prometheusNodes;
        }
    }

    ##
    # Webdav mount route
    # https://ws-*.cloud.cloud-staging.analitico.ai
    ## 

    server {
        listen 443 ssl http2;
        server_name ~^ws-[\w-]+\.cloud.cloud-staging\.analitico\.ai$;

        # long timeouts for uploading and downloading large batches
        proxy_connect_timeout 120m;
        # http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_send_timeout
        proxy_send_timeout 120m;        
        # http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_read_timeout
        proxy_read_timeout 120m;
        # timeout for two successive sends to client, not whole response
        send_timeout 90;
        
        # Uploads can be huge
        client_max_body_size 16g;

        location / {
            proxy_pass https://k8nodesSSL;

            # map to hostname of api service to be recognized by knative
            proxy_set_header Host api-staging.cloud.cloud-staging.analitico.ai;
            # send original host
            proxy_set_header X-Forwarded-Host $host;
            
            proxy_redirect off;
        }
    }

    ##
    # http://*.cloud-staging.analitico.ai
    ##

    server {
        listen 80;
        server_name ~^.+\.cloud-staging\.analitico\.ai cloud-staging.analitico.ai;

        # long timeouts for uploading and downloading large batches
        proxy_connect_timeout 120m;
        # http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_send_timeout
        proxy_send_timeout 120m;        
        # http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_read_timeout
        proxy_read_timeout 120m;
        # timeout for two successive sends to client, not whole response
        send_timeout 90;
        
        # Uploads can be huge
        client_max_body_size 16g;

        # analitico website's static files
        location /app {
            # served from on the mount point to the remote storage
            alias /mnt/analitico-drive/staging;
            # tell nginx to always resolve /app routing to index.html
            # because react router uses the url /app/page instead
            # of the url with the hash /app/#page
            try_files $uri$args /app/index.html;

            # disable browser caching for index.html
            location =/app/index.html {
                add_header 'Cache-Control' 'no-cache, no-store, must-revalidate' always;
                add_header 'Pragma' 'no-cache' always;
                add_header 'Expires' '0' always;
            }
            # always revalidate app.js
            location =/app/app.js {
                add_header 'Cache-Control' 'no-cache, must-revalidate' always;
                add_header 'Pragma' 'no-cache' always;
            }
        }

        # django static files
        location /static {
            alias /mnt/analitico-drive/staging/static;
        }

        location / {
            proxy_pass http://k8nodes;

            # map to hostname of api service to be recognized by knative
            proxy_set_header Host api-staging.cloud.cloud-staging.analitico.ai;
            # send original host
            proxy_set_header X-Forwarded-Host $host;
            
            proxy_redirect off;
        }
    }

    ##
    # https://*.cloud-staging.analitico.ai
    ##

    server {
        listen 443 ssl http2;
        server_name *.cloud-staging.analitico.ai cloud-staging.analitico.ai;

        # long timeouts for uploading and downloading large batches
        proxy_connect_timeout 120m;
        # http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_send_timeout
        proxy_send_timeout 120m;        
        # http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_read_timeout
        proxy_read_timeout 120m;
        # timeout for two successive sends to client, not whole response
        send_timeout 90;
        
        # Uploads can be huge
        client_max_body_size 16g;

        # analitico website's static files
        location /app {
            # served from on the mount point to the remote storage
            alias /mnt/analitico-drive/staging;
            try_files $uri$args /app/index.html;

            # disable browser caching for index.html
            location =/app/index.html {
                add_header 'Cache-Control' 'no-cache, no-store, must-revalidate' always;
                add_header 'Pragma' 'no-cache' always;
                add_header 'Expires' '0' always;
            }
            # always revalidate app.js
            location =/app/dist/app.js {
                add_header 'Cache-Control' 'no-cache, must-revalidate' always;
                add_header 'Pragma' 'no-cache' always;
            }
        }

        # django static files
        location /static {
            alias /mnt/analitico-drive/staging/static;
        }

        location / {
            proxy_pass https://k8nodesSSL;

            # map to hostname of api service to be recognized by knative
            proxy_set_header Host api-staging.cloud.cloud-staging.analitico.ai;
            # send original host
            proxy_set_header X-Forwarded-Host $host;
            
            proxy_redirect off;
        }
    }
}
