apiVersion: apps/v1
kind: Deployment
metadata:
  name: {deployment_name}
  namespace: {service_namespace}
  labels:
    app: {service_name}
    analitico.ai/workspace-id: {workspace_id}
spec:
  selector:
    matchLabels:
      app: {service_name}
  template:
    metadata:
      namespace: {service_namespace}
      labels:
        app: {service_name}
        analitico.ai/workspace-id: {workspace_id}
    spec:
      containers:
      - image: {image_name}
        name: {pod_name}
        command: ["/app/tasks/jupyter-start.sh"]
        env:
        - name: PORT
          value: "8080"
        - name: ANALITICO_DRIVE
          value: /mnt/analitico-drive
        - name: ANALITICO_JUPYTER_TOKEN
          valueFrom:
            secretKeyRef:
              name: {secret_name}
              key: token
        resources:
          limits:
            cpu: {cpu_limit}
            memory: {memory_limit}
            nvidia.com/gpu: {gpu_limit}
        volumeMounts:
        - name: analitico-drive
          mountPath: /mnt/analitico-drive
          readOnly: false
      volumes:
      - name: analitico-drive
        flexVolume:
          driver: "fstab/cifs"
          fsType: "cifs"
          secretRef:
            name: analitico-drive-{workspace_id_slug}
          options:
            networkPath: {volume_network_path}
            mountOptions: dir_mode=0755,file_mode=0644,noperm
---
apiVersion: v1
kind: Service
metadata:
  name: {service_name}
  namespace: {service_namespace}
  labels:
    app: {service_name}
    analitico.ai/workspace-id: {workspace_id}
spec:
  selector:
    app: {service_name}
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
  type: NodePort
---